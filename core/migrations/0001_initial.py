# Generated by Django 5.2.6 on 2025-09-24 21:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agencies', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgencyUserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('admin', 'مدیر آژانس'), ('booking_agent', 'کاربر رزرو'), ('finance_manager', 'مدیر مالی'), ('viewer', 'فقط مشاهده\u200cگر')], max_length=50, unique=True, verbose_name='نقش')),
            ],
            options={
                'verbose_name': 'نقش کاربر آژانس',
                'verbose_name_plural': 'نقش\u200cهای کاربران آژانس',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='نام منو')),
                ('slug', models.SlugField(help_text='برای فراخوانی در کد استفاده می\u200cشود (مثلا: main-menu)', unique=True)),
            ],
            options={
                'verbose_name': 'منو',
                'verbose_name_plural': 'منوها',
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='نام سایت', max_length=100, verbose_name='نام وب\u200cسایت')),
                ('slogan', models.CharField(blank=True, max_length=255, null=True, verbose_name='شعار یا توضیح کوتاه سایت')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='site_settings/', verbose_name='لوگو')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='site_settings/', verbose_name='فایوآیکون (Favicon)')),
                ('primary_color', models.CharField(default='#007BFF', max_length=7, verbose_name='رنگ اصلی')),
                ('secondary_color', models.CharField(default='#6c757d', max_length=7, verbose_name='رنگ ثانویه')),
                ('text_color', models.CharField(default='#333333', max_length=7, verbose_name='رنگ متن')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='شماره تلفن')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='آدرس ایمیل')),
                ('address', models.TextField(blank=True, null=True, verbose_name='آدرس فیزیکی')),
                ('instagram_url', models.URLField(blank=True, null=True, verbose_name='لینک اینستاگرام')),
                ('telegram_url', models.URLField(blank=True, null=True, verbose_name='لینک تلگرام')),
                ('whatsapp_url', models.URLField(blank=True, null=True, verbose_name='لینک واتس\u200cاپ')),
                ('footer_text', models.TextField(blank=True, null=True, verbose_name='متن کوتاه درباره ما در فوتر')),
                ('enamad_code', models.TextField(blank=True, null=True, verbose_name='کد HTML اینماد')),
                ('copyright_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='متن کپی\u200cرایت')),
            ],
            options={
                'verbose_name': 'تنظیمات سایت',
                'verbose_name_plural': 'تنظیمات سایت',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='agencies.agency', verbose_name='آژانس')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('agency_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.agencyuserrole', verbose_name='نقش در آژانس')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='عنوان لینک')),
                ('url', models.CharField(max_length=255, verbose_name='آدرس URL')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='ترتیب نمایش')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.menu', verbose_name='منوی اصلی')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.menuitem', verbose_name='والد')),
            ],
            options={
                'verbose_name': 'آیتم منو',
                'verbose_name_plural': 'آیتم\u200cهای منو',
                'ordering': ['order'],
            },
        ),
    ]
